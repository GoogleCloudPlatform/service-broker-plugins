# Copyright 2018 the Service Broker Project Authors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http:#www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
---
version: 1
name: google-datastore-v2
id: 34ea74c8-b281-46fa-9552-a993944a456b
description: Google Cloud Datastore is a NoSQL document database service.
display_name: Google Cloud Datastore
image_url: https://cloud.google.com/_static/images/cloud/products/logos/svg/datastore.svg
documentation_url: https://cloud.google.com/datastore/docs/
support_url: https://cloud.google.com/datastore/docs/getting-support
tags: [gcp, datastore, preview]
plans:
- name: default
  id: 45ad248c-d651-43e3-b7db-a185cd38c515
  description: Datastore default plan.
  display_name: "Default"
  properties: {}
provision:
  plan_inputs: []
  user_inputs:
  - field_name: namespace
    type: string
    details: A context for the identifiers in your entity’s dataset. This ensures
      that different systems can all interpret an entity's data the same way, based
      on the rules for the entity’s particular namespace. Blank means the default
      namespace will be used.
    default: ""
    constraints:
      maxLength: 100
      pattern: ^[A-Za-z0-9_-]*$
  computed_inputs: []
  template: |-
    variable namespace {type = "string"}
    output namespace {value = "${var.namespace}"}
  outputs:
  - field_name: namespace
    type: string
    details: A context for the identifiers in your entity’s dataset.
    constraints:
      maxLength: 100
      pattern: ^[A-Za-z0-9_-]*$
bind:
  plan_inputs: []
  user_inputs: []
  computed_inputs:
  - name: service_account_name
    default: ${str.truncate(20, "pcf-binding-${request.binding_id}")}
    overwrite: true
    type: string
  template: |
    variable service_account_name {type = "string"}

    resource "google_service_account" "account" {
      account_id = "${var.service_account_name}"
      display_name = "${var.service_account_name}"
    }

    resource "google_service_account_key" "key" {
      service_account_id = "${google_service_account.account.name}"
    }

    resource "google_project_iam_member" "member" {
      role   = "roles/datastore.user"
      member = "serviceAccount:${google_service_account.account.email}"
    }

    output Email {value = "${google_service_account.account.email}"}
    output Name {value = "${google_service_account.account.display_name}"}
    output PrivateKeyData {value = "${google_service_account_key.key.private_key}"}
    output ProjectId {value = "${google_service_account.account.project}"}
    output UniqueId {value = "${google_service_account.account.unique_id}"}
  outputs:
  - required: true
    field_name: Email
    type: string
    details: Email address of the service account.
    constraints:
      examples:
      - pcf-binding-ex312029@my-project.iam.gserviceaccount.com
      pattern: ^pcf-binding-[a-z0-9-]+@.+\.gserviceaccount\.com$
  - required: true
    field_name: Name
    type: string
    details: The name of the service account.
    constraints:
      examples:
      - pcf-binding-ex312029
  - required: true
    field_name: PrivateKeyData
    type: string
    details: Service account private key data. Base64 encoded JSON.
    constraints:
      minLength: 512
      pattern: ^[A-Za-z0-9+/]*=*$
  - required: true
    field_name: ProjectId
    type: string
    details: ID of the project that owns the service account.
    constraints:
      examples:
      - my-project
      maxLength: 30
      minLength: 6
      pattern: ^[a-z0-9-]+$
  - required: true
    field_name: UniqueId
    type: string
    details: Unique and stable ID of the service account.
    constraints:
      examples:
      - "112447814736626230844"
examples:
- name: Basic Configuration
  description: Creates a datastore and a user with the permission `datastore.user`.
  plan_id: 45ad248c-d651-43e3-b7db-a185cd38c515
  provision_params: {}
  bind_params: {}
- name: Custom Namespace
  description: Creates a datastore and returns the provided namespace along with bind
    calls.
  plan_id: 45ad248c-d651-43e3-b7db-a185cd38c515
  provision_params:
    namespace: my-namespace
  bind_params: {}
