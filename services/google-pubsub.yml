# Copyright 2018 the Service Broker Project Authors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http:#www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
---
version: 1
name: google-pubsub-v2
id: 7f41ffe8-3031-4842-8cfa-1fa51dba4e33
description: A global service for real-time and reliable messaging and streaming data.
display_name: Google PubSub
image_url: https://cloud.google.com/_static/images/cloud/products/logos/svg/pubsub.svg
documentation_url: https://cloud.google.com/pubsub/docs/
support_url: https://cloud.google.com/pubsub/docs/support
tags: [gcp, pubsub]
plans:
- name: default
  id: 7c2c794b-f3a4-4ab1-a376-2ecd971a815b
  description: PubSub Default plan.
  display_name: Default
  properties: {}
provision:
  plan_inputs: []
  user_inputs:
  - field_name: topic_name
    type: string
    details: Name of the topic. Must not start with "goog".
    default: pcf_sb_${counter.next()}_${time.nano()}
    constraints:
      maxLength: 255
      minLength: 3
      pattern: ^[a-zA-Z][a-zA-Z0-9\d\-_~%\.\+]+$
  - field_name: subscription_name
    type: string
    details: Name of the subscription. Blank means no subscription will be created.
      Must not start with "goog".
    default: ""
    constraints:
      maxLength: 255
      minLength: 0
      pattern: ^(|[a-zA-Z][a-zA-Z0-9\d\-_~%\.\+]+)$
  - field_name: endpoint
    type: string
    details: If not blank, then events sent to the subscription will be POSTed to this URL., then this , then this is the URL that will be pushed to.
    default: ""
  - field_name: ack_deadline
    type: string
    details: |
      Value is in seconds. Max: 600
      This is the maximum time after a subscriber receives a message before the
      subscriber should acknowledge the message. After message delivery but
      before the ack deadline expires and before the message is acknowledged, it
      is an outstanding message and will not be delivered again during that time
      (on a best-effort basis).
    default: "10"
  computed_inputs:
  - name: labels
    default: ${json.marshal(request.default_labels)}
    type: object
    overwrite: true
  template: |+
    variable ack_deadline {type = "string"}
    variable endpoint {type = "string"}
    variable labels {type = "map"}
    variable subscription_name {type = "string"}
    variable topic_name {type = "string"}

    resource "google_pubsub_topic" "default" {
      name = "${var.topic_name}"
      # TODO(josephlewis42): this isn't supported by Terraform at this time, but
      # it is implemented by Magic Modules and is just waiting for a release.
      # labels = "${var.labels}"
    }

    resource "google_pubsub_subscription" "nopush" {
      count = "${(length(var.subscription_name) > 0 && length(var.endpoint) == 0) ? 1 : 0}"

      name  = "${var.subscription_name}"
      topic = "${google_pubsub_topic.default.name}"

      ack_deadline_seconds = "${var.ack_deadline}"
    }

    resource "google_pubsub_subscription" "push" {
      count = "${(length(var.subscription_name) > 0 && length(var.endpoint) != 0) ? 1 : 0}"

      name  = "${var.subscription_name}"
      topic = "${google_pubsub_topic.default.name}"

      ack_deadline_seconds = "${var.ack_deadline}"

      push_config {
        push_endpoint = "${var.endpoint}"
      }
    }

    output subscription_name {value = "${var.subscription_name}"}
    output topic_name {value = "${var.topic_name}"}

  outputs:
  - field_name: subscription_name
    type: string
    details: Name of the subscription.
    constraints:
      maxLength: 255
      minLength: 0
      pattern: ^(|[a-zA-Z][a-zA-Z0-9\d\-_~%\.\+]+)
  - required: true
    field_name: topic_name
    type: string
    details: Name of the topic.
    constraints:
      maxLength: 255
      minLength: 3
      pattern: ^[a-zA-Z][a-zA-Z0-9\d\-_~%\.\+]+$
bind:
  plan_inputs: []
  user_inputs: []
  computed_inputs:
  - name: service_account_name
    default: ${str.truncate(20, "pcf-binding-${request.binding_id}")}
    overwrite: true
  - name: service_account_display_name
    default: ${service_account_name}
    overwrite: true
  - name: topic_name
    default: ${instance.details["topic_name"]}
    overwrite: true
  - name: subscription_name
    default: ${instance.details["subscription_name"]}
    overwrite: true
  template: |
    variable service_account_display_name {type = "string"}
    variable service_account_name {type = "string"}
    variable subscription_name {type = "string"}
    variable topic_name {type = "string"}

    resource "google_service_account" "account" {
      account_id = "${var.service_account_name}"
      display_name = "${var.service_account_name}"
    }

    resource "google_service_account_key" "key" {
      service_account_id = "${google_service_account.account.name}"
    }

    resource "google_pubsub_topic_iam_member" "default" {
      topic  = "${var.topic_name}"
      role   = "roles/pubsub.editor"
      member = "serviceAccount:${google_service_account.account.email}"
    }

    resource "google_pubsub_subscription_iam_member" "default" {
      count        = "${length(var.subscription_name) > 0 ? 1 : 0}"
      subscription = "${var.subscription_name}"
      role         = "roles/pubsub.editor"
      member       = "serviceAccount:${google_service_account.account.email}"
    }

    output Email {value = "${google_service_account.account.email}"}
    output Name {value = "${google_service_account.account.display_name}"}
    output PrivateKeyData {value = "${google_service_account_key.key.private_key}"}
    output ProjectId {value = "${google_service_account.account.project}"}
    output UniqueId {value = "${google_service_account.account.unique_id}"}

  outputs:
  - required: true
    field_name: Email
    type: string
    details: Email address of the service account.
    constraints:
      examples:
      - pcf-binding-ex312029@my-project.iam.gserviceaccount.com
      pattern: ^pcf-binding-[a-z0-9-]+@.+\.gserviceaccount\.com$
  - required: true
    field_name: Name
    type: string
    details: The name of the service account.
    constraints:
      examples:
      - pcf-binding-ex312029
  - required: true
    field_name: PrivateKeyData
    type: string
    details: Service account private key data. Base64 encoded JSON.
    constraints:
      minLength: 512
      pattern: ^[A-Za-z0-9+/]*=*$
  - required: true
    field_name: ProjectId
    type: string
    details: ID of the project that owns the service account.
    constraints:
      examples:
      - my-project
      maxLength: 30
      minLength: 6
      pattern: ^[a-z0-9-]+$
  - required: true
    field_name: UniqueId
    type: string
    details: Unique and stable ID of the service account.
    constraints:
      examples:
      - "112447814736626230844"
examples:
- name: Basic Configuration
  description: Create a topic and a publisher to it.
  plan_id: 7c2c794b-f3a4-4ab1-a376-2ecd971a815b
  provision_params:
    subscription_name: example_topic_subscription
    topic_name: example_topic
  bind_params: {}
- name: No Subscription
  description: Create a topic without a subscription.
  plan_id: 7c2c794b-f3a4-4ab1-a376-2ecd971a815b
  provision_params:
    topic_name: example_topic
  bind_params: {}
- name: Custom Timeout
  description: Create a subscription with a custom deadline for long processess.
  plan_id: 7c2c794b-f3a4-4ab1-a376-2ecd971a815b
  provision_params:
    ack_deadline: "200"
    subscription_name: long_deadline_subscription
    topic_name: long_deadline_topic
  bind_params: {}
