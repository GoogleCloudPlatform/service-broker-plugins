# Copyright 2019 Google LLC.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http:#www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
---
version: 1
name: google-spanner-v2
id: 2aa933e6-8835-4545-a65e-eaabb29eaa74
description: The first horizontally scalable, globally consistent, relational database
  service.
display_name: Google Spanner
image_url: https://cloud.google.com/_static/images/cloud/products/logos/svg/spanner.svg
documentation_url: https://cloud.google.com/spanner/
support_url: https://cloud.google.com/spanner/docs/support
tags: [gcp, spanner]
plans:
- name: sandbox
  id: 29d3ad67-99d0-4e36-8463-4c2082761ac3
  description: Useful for testing, not eligible for SLA.
  display_name: "sandbox"
  properties:
    num_nodes: "1"
- name: minimal-production
  id: 72977a03-206d-47e2-b975-999a3caa1cc3
  description: A minimal production level Spanner setup eligible for 99.99% SLA. Each
    node can provide up to 10,000 QPS of reads or 2,000 QPS of writes (writing single
    rows at 1KB data per row), and 2 TiB storage.
  display_name: "minimal-production"
  properties:
    num_nodes: "3"
provision:
  plan_inputs:
  - required: true
    field_name: num_nodes
    type: string
    details: 'Number of nodes, a minimum of 3 nodes is recommended for production
      environments. See: https://cloud.google.com/spanner/pricing for more information.'
    default: "1"
  user_inputs:
  - field_name: name
    type: string
    details: A unique identifier for the instance, which cannot be changed after the
      instance is created.
    default: pcf-sb-${counter.next()}-${time.nano()}
    constraints:
      maxLength: 30
      minLength: 6
      pattern: ^[a-z][-a-z0-9]*[a-z0-9]$
  - field_name: display_name
    type: string
    details: The name of this instance configuration as it appears in UIs.
    default: ${name}
    constraints:
      maxLength: 30
      minLength: 4
  - field_name: location
    type: string
    details: "A configuration for a Cloud Spanner instance.\n\t\t\t\t Configurations
      define the geographic placement of nodes and their replication and are slightly
      different from zones.\n\t\t\t\t There are single region configurations, multi-region
      configurations, and multi-continent configurations.\n\t\t\t\t See the instance
      docs https://cloud.google.com/spanner/docs/instances for a list of configurations."
    default: regional-us-central1
    constraints:
      examples:
      - regional-asia-east1
      - nam3
      - nam-eur-asia1
      pattern: ^[a-z][-a-z0-9]*[a-z0-9]$
  computed_inputs:
  - name: labels
    default: ${json.marshal(request.default_labels)}
    overwrite: true
  template: |+
    variable display_name {type = "string"}
    variable labels {type = "map"}
    variable location {type = "string"}
    variable name {type = "string"}
    variable num_nodes {type = "string"}

    resource "google_spanner_instance" "example" {
      name = "${var.name}"
      config = "${var.location}"
      display_name = "${var.display_name}"
      num_nodes = "${var.num_nodes}"
      # labels = "${var.labels}"
    }

    output instance_id {value = "${var.name}"}

  outputs:
  - required: true
    field_name: instance_id
    type: string
    details: Name of the Spanner instance the account can connect to.
    constraints:
      maxLength: 30
      minLength: 6
      pattern: ^[a-z][-a-z0-9]*[a-z0-9]$
bind:
  plan_inputs: []
  user_inputs:
  - field_name: role
    type: string
    details: "The role for the account without the \"roles/\" prefix.\n\tSee: https://cloud.google.com/iam/docs/understanding-roles
      for more details.\n\tNote: The default enumeration may be overridden by your
      operator."
    default: spanner.databaseUser
    enum:
      spanner.databaseAdmin: roles/spanner.databaseAdmin
      spanner.databaseReader: roles/spanner.databaseReader
      spanner.databaseUser: roles/spanner.databaseUser
      spanner.viewer: roles/spanner.viewer
  computed_inputs:
  - name: service_account_name
    default: ${str.truncate(20, "pcf-binding-${request.binding_id}")}
    overwrite: true
  - name: service_account_display_name
    default: ${service_account_name}
    overwrite: true
  - name: instance_id
    default: ${instance.details["instance_id"]}
    overwrite: true
  template: |
    variable role {type = "string"}
    variable service_account_display_name {type = "string"}
    variable service_account_name {type = "string"}
    variable instance_id {type = "string"}

    resource "google_service_account" "account" {
      account_id = "${var.service_account_name}"
      display_name = "${var.service_account_name}"
    }

    resource "google_service_account_key" "key" {
      service_account_id = "${google_service_account.account.name}"
    }

    resource "google_spanner_instance_iam_member" "instance" {
      instance  = "${var.instance_id}"
      role      = "${var.role}"
      member    = "${google_service_account.account.email}"
    }

    output Email {value = "${google_service_account.account.email}"}
    output Name {value = "${google_service_account.account.display_name}"}
    output PrivateKeyData {value = "${google_service_account_key.key.private_key}"}
    output ProjectId {value = "${google_service_account.account.project}"}
    output UniqueId {value = "${google_service_account.account.unique_id}"}
  outputs:
  - required: true
    field_name: Email
    type: string
    details: Email address of the service account.
    constraints:
      examples:
      - pcf-binding-ex312029@my-project.iam.gserviceaccount.com
      pattern: ^pcf-binding-[a-z0-9-]+@.+\.gserviceaccount\.com$
  - required: true
    field_name: Name
    type: string
    details: The name of the service account.
    constraints:
      examples:
      - pcf-binding-ex312029
  - required: true
    field_name: PrivateKeyData
    type: string
    details: Service account private key data. Base64 encoded JSON.
    constraints:
      minLength: 512
      pattern: ^[A-Za-z0-9+/]*=*$
  - required: true
    field_name: ProjectId
    type: string
    details: ID of the project that owns the service account.
    constraints:
      examples:
      - my-project
      maxLength: 30
      minLength: 6
      pattern: ^[a-z0-9-]+$
  - required: true
    field_name: UniqueId
    type: string
    details: Unique and stable ID of the service account.
    constraints:
      examples:
      - "112447814736626230844"

examples:
- name: Basic Configuration
  description: Create a sandbox environment with a database admin account.
  plan_id: 29d3ad67-99d0-4e36-8463-4c2082761ac3
  provision_params:
    name: auth-database
  bind_params:
    role: spanner.databaseAdmin
- name: 99.999% availability
  description: Create a spanner instance spanning North America.
  plan_id: 72977a03-206d-47e2-b975-999a3caa1cc3
  provision_params:
    location: nam3
    name: auth-database
  bind_params:
    role: spanner.databaseAdmin
