# Copyright 2019 the Service Broker Project Authors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http:#www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
---
version: 1
name: google-storage-v2
id: 63f1aa1c-b51a-4761-a25b-0a369022d43e
description: Unified object storage, from live applications data to cloud archival.
display_name: Google Cloud Storage
image_url: https://cloud.google.com/_static/images/cloud/products/logos/svg/storage.svg
documentation_url: https://cloud.google.com/storage/docs/overview
support_url: https://cloud.google.com/storage/docs/getting-support
tags: [gcp, storage]
plans:
- name: standard
  id: e1d11f65-da66-46ad-977c-6d56513baf43
  description: Standard storage class. Auto-selects either regional or multi-regional
    based on the location.
  display_name: "Standard"
  properties:
    storage_class: STANDARD
- name: nearline
  id: a42c1182-d1a0-4d40-82c1-28220518b360
  description: Nearline storage class.
  display_name: "Nearline"
  properties:
    storage_class: NEARLINE
- name: reduced-availability
  id: 1a1f4fe6-1904-44d0-838c-4c87a9490a6b
  description: Durable Reduced Availability storage class.
  display_name: "Durable Reduced Availability"
  properties:
    storage_class: DURABLE_REDUCED_AVAILABILITY
- name: coldline
  id: c8538397-8f15-45e3-a229-8bb349c3a98f
  description: Google Cloud Storage Coldline is a very-low-cost, highly durable storage
    service for data archiving, online backup, and disaster recovery.
  display_name: "Coldline"
  properties:
    storage_class: COLDLINE
- name: regional
  id: 5e6161d2-0202-48be-80c4-1006cce19b9d
  description: Data is stored in a narrow geographic region, redundant across availability
    zones with a 99.99% typical monthly availability.
  display_name: "Regional"
  properties:
    storage_class: REGIONAL
- name: multiregional
  id: a5e8dfb5-e5ec-472a-8d36-33afcaff2fdb
  description: Data is stored geo-redundantly with >99.99% typical monthly availability.
  display_name: "Multi-Regional"
  properties:
    storage_class: MULTI_REGIONAL
provision:
  plan_inputs:
  - required: true
    field_name: storage_class
    type: string
    details: 'The storage class of the bucket. See: https://cloud.google.com/storage/docs/storage-classes.'
  user_inputs:
  - field_name: name
    type: string
    details: The name of the bucket. There is a single global namespace shared by
      all buckets so it MUST be unique.
    default: gsb_${counter.next()}_${time.nano()}
    constraints:
      maxLength: 222
      minLength: 3
      pattern: ^[A-Za-z0-9_\.]+$
  - field_name: location
    type: string
    details: 'The location of the bucket. Object data for objects in the bucket resides
      in physical storage within this region. See: https://cloud.google.com/storage/docs/bucket-locations'
    default: US
    constraints:
      examples:
      - US
      - EU
      - southamerica-east1
      pattern: ^[A-Za-z][-a-z0-9A-Z]+$
  computed_inputs:
  - name: labels
    default: ${json.marshal(request.default_labels)}
    overwrite: true
    type: object
  template: |+
    variable "labels" {
      type = map(string)
    }

    variable "location" {
      type = string
    }

    variable "name" {
      type = string
    }

    variable "storage_class" {
      type = string
    }

    resource "google_storage_bucket" "instance" {
      name          = var.name
      location      = var.location
      storage_class = var.storage_class
      labels        = var.labels
    }

    output "bucket_name" {
      value = google_storage_bucket.instance.name
    }
  outputs:
  - required: true
    field_name: bucket_name
    type: string
    details: Name of the bucket this binding is for.
    constraints:
      maxLength: 222
      minLength: 3
      pattern: ^[A-Za-z0-9_\.]+$
bind:
  plan_inputs: []
  user_inputs:
  - field_name: role
    type: string
    details: |
      The role for the account without the "roles/" prefix.
      See: https://cloud.google.com/iam/docs/understanding-roles for more details.
    default: storage.objectAdmin
    enum:
      storage.objectAdmin: roles/storage.objectAdmin
      storage.objectCreator: roles/storage.objectCreator
      storage.objectViewer: roles/storage.objectViewer
  computed_inputs:
  - name: service_account_name
    default: ${str.truncate(20, "gsb-binding-${request.binding_id}")}
    overwrite: true
    type: "string"
  - name: service_account_display_name
    default: ${service_account_name}
    overwrite: true
    type: "string"
  - name: bucket_name
    default: ${instance.details["bucket_name"]}
    overwrite: true
    type: "string"
  template: |
    variable "role" {
      type = string
    }

    variable "service_account_display_name" {
      type = string
    }

    variable "service_account_name" {
      type = string
    }

    variable "bucket_name" {
      type = string
    }

    resource "google_service_account" "account" {
      account_id   = var.service_account_name
      display_name = var.service_account_name
    }

    resource "google_service_account_key" "key" {
      service_account_id = google_service_account.account.name
    }

    resource "google_storage_bucket_iam_member" "instance" {
      bucket = var.bucket_name
      role   = "roles/${var.role}"
      member = "serviceAccount:${google_service_account.account.email}"
    }

    output "Email" {
      value = google_service_account.account.email
    }

    output "Name" {
      value = google_service_account.account.display_name
    }

    output "PrivateKeyData" {
      value = google_service_account_key.key.private_key
    }

    output "ProjectId" {
      value = google_service_account.account.project
    }

    output "UniqueId" {
      value = google_service_account.account.unique_id
    }
  outputs:
  - required: true
    field_name: Email
    type: string
    details: Email address of the service account.
    constraints:
      examples:
      - gsb-binding-ex312029@my-project.iam.gserviceaccount.com
      pattern: ^gsb-binding-[a-z0-9-]+@.+\.gserviceaccount\.com$
  - required: true
    field_name: Name
    type: string
    details: The name of the service account.
    constraints:
      examples:
      - gsb-binding-ex312029
  - required: true
    field_name: PrivateKeyData
    type: string
    details: Service account private key data. Base64 encoded JSON.
    constraints:
      minLength: 512
      pattern: ^[A-Za-z0-9+/]*=*$
  - required: true
    field_name: ProjectId
    type: string
    details: ID of the project that owns the service account.
    constraints:
      examples:
      - my-project
      maxLength: 30
      minLength: 6
      pattern: ^[a-z0-9-]+$
  - required: true
    field_name: UniqueId
    type: string
    details: Unique and stable ID of the service account.
    constraints:
      examples:
      - "112447814736626230844"
examples:
- name: Basic Configuration
  description: Create a nearline bucket with a service account that can create/read/list/delete
    the objects in it.
  plan_id: a42c1182-d1a0-4d40-82c1-28220518b360
  provision_params:
    location: us
  bind_params:
    role: storage.objectAdmin
- name: Cold Storage
  description: Create a coldline bucket with a service account that can create/read/list/delete
    the objects in it.
  plan_id: c8538397-8f15-45e3-a229-8bb349c3a98f
  provision_params:
    location: us
  bind_params:
    role: storage.objectAdmin
- name: Regional Storage
  description: Create a regional bucket with a service account that can create/read/list/delete
    the objects in it.
  plan_id: 5e6161d2-0202-48be-80c4-1006cce19b9d
  provision_params:
    location: us-west1
  bind_params:
    role: storage.objectAdmin
- name: Multi-Regional Storage
  description: Create a multi-regional bucket with a service account that can create/read/list/delete
    the objects in it.
  plan_id: a5e8dfb5-e5ec-472a-8d36-33afcaff2fdb
  provision_params:
    location: us
  bind_params:
    role: storage.objectAdmin
